# This is a basic workflow to help you get started with Actions

name: JPackage

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:


jobs:

  build_and_publish:

    strategy:
      matrix:
        os: [windows-latest] # [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    
    env:
      NativeImageOutput: JavaSwingPlaygroundTest

    steps:

        # Get the source code
      - uses: actions/checkout@v3
      
        # Set up JDK for Windows
      - uses: actions/setup-java@v3
        if: matrix.os == 'windows-latest'
        with:
          distribution: 'microsoft'
          java-version: '17'
          java-package: 'jdk'
          cache: 'gradle'
  
  
  
        # Build the application (macos)
      - name: Gradle & native build (macos)
        run: |
          cd SwingTestTwo/
          ./gradlew build
          jpackage \
            --app-version 1.0.0 \
            --input . \
            --dest ${{ matrix.os }}-release \
            --main-jar $(find build -name *.jar) \
            --main-class main.Main \
            --name ${{ env.NativeImageOutput }} \
            --copyright "Tobias Prisching"
        if: matrix.os == 'macos-latest'
        
        # Build the application (windows - Part 1)
      - name: Gradle...
        shell: cmd 
        run: |
          cd SwingTestTwo/
          gradlew build
        if: matrix.os == 'windows-latest'
        
         # Build the application (windows - Part 2)
      - name: ...and native build (windows)
        shell: cmd 
        run: |
          cd SwingTestTwo/
          jpackage --version
          jpackage ^
           --app-version 1.0.0 ^
           --input . ^
           --dest ./${{ matrix.os }}-release ^
           --main-jar $(find build/ -name "*.jar") ^
           --main-class main.Main ^
           --name ${{ env.NativeImageOutput }} ^
           --copyright "Tobias Prisching" ^
           --verbose
        if: matrix.os == 'windows-latest'
        
        # Build the application (linux)
      - name: Gradle & native build (linux)
        run: |
          cd SwingTestTwo/
          ./gradlew build
          jpackage \
            --app-version 1.0.0 \
            --input . \
            --dest ${{ matrix.os }}-release \
            --main-jar $(find build -name *.jar) \
            --main-class main.Main \
            --name ${{ env.NativeImageOutput }} \
            --copyright "Tobias Prisching"
        if: matrix.os == 'ubuntu-latest'
          
        # List all
      - name: List all
        run: |
          ls -R
      
        # ZIP Artifact
      - name: ZIP Artifact (non-windows)
        run: |
          cd SwingTestTwo
          zip -r ${{ matrix.os }}.zip ${{ matrix.os }}-release/
          mv ${{ matrix.os }}.zip ..
        if: matrix.os != 'windows-latest'
          
      - name: ZIP Artifact (windows)
        run: |
          cd SwingTestTwo
          7z a "${{ matrix.os }}.zip" "${{ matrix.os }}-release/"
          mv ${{ matrix.os }}.zip ..
        if: matrix.os == 'windows-latest'
      
      
      
        # Publish Artifact
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: ${{ matrix.os }}
          path: ${{ matrix.os }}.zip
