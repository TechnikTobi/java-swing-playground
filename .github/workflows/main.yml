# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  workflow_dispatch:


jobs:

  build_and_publish:

    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        #os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:

      # Get the source code
      - uses: actions/checkout@v3
      
      # Setup the java enviornment 
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      
      # Get information about enviornment
      - name: Get info about build enviornment
        run: |
          echo "GRAALVM_HOME: $GRAALVM_HOME"
          echo "JAVA_HOME: $JAVA_HOME"
          java --version
          gu --version
          native-image --version
        if: matrix.os != 'windows-latest'
        
      # Build the application
      - name: Gradle & native build
        run: |
          cd SwingTestTwo/
          ./gradlew build
          native-image -jar $(find build -name *.jar) HELLO
#          native-image build/classes/java/main/main/Main
#          native-image $(find build -name *.class)
          
      - name: List all
        run: ls -R

        # Create Artifact
      - name: Create Artifact (non-windows)
        run: |
          cd SwingTestTwo
          mkdir ${{ matrix.os }}-release
          cp HELLO* ${{ matrix.os }}-release/
      
      
        # ZIP Artifact
      - name: ZIP Artifact (non-windows)
        run: |
          cd SwingTestTwo
          zip -r ${{ matrix.os }}.zip ${{ matrix.os }}-release/
          mv ${{ matrix.os }}.zip ..
        if: matrix.os != 'windows-latest'
          
      - name: ZIP Artifact (windows)
        shell: msys2 {0}
        run: |
          cd SwingTestTwo
          7z a "${{ matrix.os }}.zip" "${{ matrix.os }}-release/"
          mv ${{ matrix.os }}.zip ..
        if: matrix.os == 'windows-latest'
      
      
        # Publish Artifact
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          name: ${{ matrix.os }}
          path: ${{ matrix.os }}.zip
